#!/usr/bin/env python
import argparse
import fileinput
import json
import re

entry_re = re.compile(r"""([A-Za-z._]+)=([A-Za-z0-9/._+-]+|"(?:\\.|[^"])+")( |$)""")
non_id_re = re.compile(r"""[^A-Za-z0-9_]""")
startswith_digit_re = re.compile(r"""^[0-9]""")

parser = argparse.ArgumentParser(description='Convert logrus log into json records.')
parser.add_argument('--ids', action='store_true', help='process keys so that they all are made of alphanumeric characters and underscore and do not start with a digit')
parser.add_argument('files', metavar='FILE', nargs='*', help='files to read, if empty, stdin is used')
args = parser.parse_args()

for line in fileinput.input(files=args.files):
    record = {}
    line = line.rstrip("\r\n")
    while line:
        match = entry_re.match(line)
        if not match:
            raise RuntimeError("got {} and unexpected line suffix: {}".format(repr(record), repr(line)))
        line = line[len(match.group(0)):]
        key, value = match.group(1), match.group(2)
        if args.ids:
            key = non_id_re.sub("_", key)
            if startswith_digit_re.match(key):
                key = "_" + key
        if value.startswith('"'):
            value = value[1:-1]
        record[key] = value
    if record:
        print(json.dumps(record))

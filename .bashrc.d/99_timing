__BASH_TIMING__START=

divide_prec() {
    # round($1/$2, log10($3))
    local len=$(($3 - 1))
    printf "%g" "$(printf "%d.%0*d" $(($1 / $2)) ${#len} $(($1 / ($2 / $3) % $3)))"
}

__bash_timing__format_us() {
    if [ $1 -lt 1000 ]; then
        printf "%d Î¼s\n" "$1"
    elif [ $1 -lt 1000000 ]; then
        divide_prec $1 1000 100
        printf " ms\n"
    else
        divide_prec $1 1000000 100
        printf " s\n"
    fi
}

bash_timing() {
    local err=$?

    if [ "$BASH_COMMAND" == "$PROMPT_COMMAND" ]; then
        if [ "$__BASH_TIMING__START" == "" ]; then
            return
        fi

        local err_prefix us=$(($(gettimeofday) - __BASH_TIMING__START))
        if [ "$err" -ne 0 ]; then
            err_prefix=$'\033[1;31m'$err$'\033[0m'" :: "
        fi

        if [ $us -lt 500000 ]; then
            [ -z "$err_prefix" ] ||
            echo "$err_prefix"$'\033[1;37m'$(__bash_timing__format_us $us)$'\033[0m' >&2
        elif [ $us -lt 1000000 ]; then
            echo "$err_prefix"$'\033[1;33m'$(__bash_timing__format_us $us)$'\033[0m' >&2
        else
            echo "$err_prefix"$'\033[1;31m'$(__bash_timing__format_us $us)$'\033[0m' >&2
        fi

        __BASH_TIMING__START=
    elif [ "$__BASH_TIMING__START" == "" ]; then
        __BASH_TIMING__START=$(gettimeofday)
    fi
}
if command gettimeofday >/dev/null 2>&1; then
    trap 'bash_timing' DEBUG
fi

__BASH_TIMING__COMMAND=""

__bash_timing__format_ns() {
    local ns=$1
    if [ $ns -lt 1000 ]; then
        echo $ns ns
    elif [ $ns -lt 1000000 ]; then
        echo $(($ns / 1000)) Î¼s
    elif [ $ns -lt 1000000000 ]; then
        local out=$(printf "%d.%02d" $(($ns / 1000000)) $(($ns / 10000 % 100)) | sed -e 's/\.\?0*$//')
        echo $out ms
    else
        local out=$(printf "%d.%02d" $(($ns / 1000000000)) $(($ns / 10000000 % 100)) | sed -e 's/\.\?0*$//')
        echo $out s
    fi
}

if [ "x$(uname -s)" == "xLinux" ]; then
    __bash_timing__now() {
        date +%s%N
    }
else
    __bash_timing__now() {
        perl -MTime::HiRes -e 'printf "%d\n", (1000000000 * Time::HiRes::time)'
    }
fi

bash_timing() {
    local err=$?
    __BASH_TIMING__FINISH=$(__bash_timing__now)

    if [ -n "$__BASH_TIMING__COMMAND" ]; then
        local ns=$(($__BASH_TIMING__FINISH - __BASH_TIMING__START))
        local err_prefix
        if [ "$err" -ne 0 ]; then
            err_prefix=$'\033[1;31m'$err$'\033[0m'" :: "
        fi

        if [ $ns -ge 1000000000 ]; then
            echo "$err_prefix"$'\033[36m'"$__BASH_TIMING__COMMAND"$'\033[0m' :: $'\033[1;31m'$(__bash_timing__format_ns $ns)$'\033[0m' >&2
        elif [ $ns -ge 500000000 ]; then
            echo "$err_prefix"$'\033[36m'"$__BASH_TIMING__COMMAND"$'\033[0m' :: $'\033[1;33m'$(__bash_timing__format_ns $ns)$'\033[0m' >&2
        elif [ -n "$err_prefix" ]; then
            echo "$err_prefix"$'\033[36m'"$__BASH_TIMING__COMMAND"$'\033[0m' :: $'\033[1;37m'$(__bash_timing__format_ns $ns)$'\033[0m' >&2
        fi
    fi

    if [ "$BASH_COMMAND" == "$PROMPT_COMMAND" ]; then
        __BASH_TIMING__COMMAND=""
        return
    fi

    __BASH_TIMING__COMMAND="$BASH_COMMAND"
    __BASH_TIMING__START=$(__bash_timing__now)
}
trap 'bash_timing' DEBUG

#!/usr/bin/env perl

sub msg {
   my ($self, $msg) = @_;

   my $overlay = $self->overlay(0, 0, $self->strwidth($msg), 1);
   $overlay->set(0, 0, $msg);
   my $iow; $iow = urxvt::timer->new->after(1)->cb(sub {
      undef $overlay;
      undef $iow;
   });
}

my %handlers = (
    menu => sub {},
    exec => sub {
        my ($term, $line, @match) = @_;
        $term->exec_async("/bin/sh", "-c", $line, @match);
    },
    send => sub {
        my ($term, $line, @match) = @_;
        my $out = $line;
        $out =~ s/\$([0-9]+)/$match[$1]/ge;
        my $octets = $term->locale_encode($out);
        $term->tt_write($octets);
    },
);

sub build_menu {
    my ($term, $popup, $fh, $selection) = @_;

    while (<$fh>) {
        # comment, blank or spaces
        next if /^\s*(?:#.*)?$/;

        # <regex> "<title>" <command> "<argument>"
        if (/^(.*)\s+"(.*)"\s+(exec|send|menu)\s+"(.*)"$/x) {
            my ($regex, $display, $cmd, $line) = ($1, $2, $3, $4);

            my (@match);
            if ($regex eq "MATCHALL") {
                @match = ($selection);
            } else {
                @match = ($selection =~ /$regex/);
                next if !@match;
                @match = ($selection, @match);
            }

            # prepare the display string for the option
            my $title = $display;
            $title =~ s/\$([0-9]+)/$match[$1]/ge;
            $title =~ s/[\x00-\x1f\x80-\x9f]/·/g;
            substr $title, 40, -3, "..." if length $title > 40;

            $popup->add_button($title, sub {
                $handlers{$cmd}->($term, $line, @match);
            });
        } elsif ($_ =~ /^-+/) {
            $popup->add_separator;
        } else {
            $popup->add_button("please fix your ctx-menu.txt file: $_", sub {});
        }
    }
}

sub on_start {
   my ($self) = @_;
   $self->grab_button(3);
   return;
}

sub on_button_press {
   my ($self, $event) = @_;

   if ($event->{button} != 3) {
     return;
   }

   my $popup = $self->popup($event)
      or return 1;

   # set the title {
   my $text = $self->selection;
   if ($self->selection_beg == $self->selection_end) {
     $text = "";
   }

   my $title = $text;
   $title =~ s/[\x00-\x1f\x80-\x9f]/·/g;
   substr $title, 40, -1, "..." if 40 < length $title;
   $popup->add_title($title);
   $popup->add_separator;

   # e.g.: ~/.Xresources URxvt.context-menu: ~/.urxvt.ctx-menu
   # $fname = $self->x_resource("context-menu");
   open(my $fh, "<", "$ENV{HOME}/.urxvt/ctx-menu.txt") or die "well that didnt work: $!";

   build_menu($self, $popup, $fh, $text);

   $popup->show;

   return 1;
}
